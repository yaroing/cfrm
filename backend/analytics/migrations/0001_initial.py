# Generated by Django 4.2.7 on 2025-09-05 13:21

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Alert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('condition', models.JSONField(default=dict)),
                ('threshold', models.FloatField()),
                ('severity', models.CharField(choices=[('low', 'Faible'), ('medium', 'Moyen'), ('high', 'Élevé'), ('critical', 'Critique')], default='medium', max_length=20)),
                ('notification_channels', models.JSONField(default=list)),
                ('notification_template', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('last_triggered', models.DateTimeField(blank=True, null=True)),
                ('trigger_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alerts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Alerte',
                'verbose_name_plural': 'Alertes',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Metric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('description', models.TextField(blank=True)),
                ('metric_type', models.CharField(choices=[('counter', 'Compteur'), ('gauge', 'Jauge'), ('histogram', 'Histogramme'), ('rate', 'Taux')], max_length=20)),
                ('query', models.JSONField(default=dict)),
                ('unit', models.CharField(blank=True, max_length=20)),
                ('target_value', models.FloatField(blank=True, null=True)),
                ('warning_threshold', models.FloatField(blank=True, null=True)),
                ('critical_threshold', models.FloatField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Métrique',
                'verbose_name_plural': 'Métriques',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Widget',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('widget_type', models.CharField(choices=[('chart', 'Graphique'), ('metric', 'Métrique'), ('table', 'Tableau'), ('list', 'Liste'), ('map', 'Carte'), ('text', 'Texte')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('config', models.JSONField(default=dict)),
                ('query', models.JSONField(default=dict)),
                ('is_active', models.BooleanField(default=True)),
                ('is_public', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='widgets', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Widget',
                'verbose_name_plural': 'Widgets',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ReportTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('report_type', models.CharField(choices=[('tickets_summary', 'Résumé des tickets'), ('performance_metrics', 'Métriques de performance'), ('channel_analysis', 'Analyse des canaux'), ('user_activity', 'Activité des utilisateurs'), ('psea_analysis', 'Analyse PSEA'), ('custom', 'Rapport personnalisé')], max_length=50)),
                ('query_filters', models.JSONField(default=dict, help_text='Filtres de base pour le rapport')),
                ('chart_config', models.JSONField(default=dict, help_text='Configuration des graphiques')),
                ('export_formats', models.JSONField(default=list, help_text="Formats d'export supportés")),
                ('is_active', models.BooleanField(default=True)),
                ('is_public', models.BooleanField(default=False, help_text='Visible par tous les utilisateurs')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_reports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Modèle de rapport',
                'verbose_name_plural': 'Modèles de rapports',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('date_from', models.DateTimeField()),
                ('date_to', models.DateTimeField()),
                ('filters', models.JSONField(default=dict)),
                ('data', models.JSONField(default=dict)),
                ('charts', models.JSONField(default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('generated_at', models.DateTimeField(blank=True, null=True)),
                ('file_path', models.CharField(blank=True, max_length=500)),
                ('status', models.CharField(choices=[('pending', 'En attente'), ('generating', 'Génération en cours'), ('completed', 'Terminé'), ('failed', 'Échec')], default='pending', max_length=20)),
                ('error_message', models.TextField(blank=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to=settings.AUTH_USER_MODEL)),
                ('template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='analytics.reporttemplate')),
            ],
            options={
                'verbose_name': 'Rapport',
                'verbose_name_plural': 'Rapports',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MetricValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.FloatField()),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('context', models.JSONField(blank=True, default=dict)),
                ('metric', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='values', to='analytics.metric')),
            ],
            options={
                'verbose_name': 'Valeur de métrique',
                'verbose_name_plural': 'Valeurs de métriques',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='ExportJob',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('export_format', models.CharField(choices=[('csv', 'CSV'), ('excel', 'Excel'), ('pdf', 'PDF'), ('json', 'JSON')], max_length=20)),
                ('query_filters', models.JSONField(default=dict)),
                ('fields', models.JSONField(default=list)),
                ('date_range', models.JSONField(default=dict)),
                ('status', models.CharField(choices=[('pending', 'En attente'), ('processing', 'Traitement en cours'), ('completed', 'Terminé'), ('failed', 'Échec')], default='pending', max_length=20)),
                ('file_path', models.CharField(blank=True, max_length=500)),
                ('file_size', models.BigIntegerField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='export_jobs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': "Tâche d'export",
                'verbose_name_plural': "Tâches d'export",
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Dashboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('layout', models.JSONField(default=dict)),
                ('widgets', models.JSONField(default=list)),
                ('filters', models.JSONField(default=dict)),
                ('is_public', models.BooleanField(default=False)),
                ('is_default', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dashboards', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Tableau de bord',
                'verbose_name_plural': 'Tableaux de bord',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='AlertEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('triggered_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('value', models.FloatField()),
                ('threshold', models.FloatField()),
                ('message', models.TextField()),
                ('notifications_sent', models.BooleanField(default=False)),
                ('notifications_sent_at', models.DateTimeField(blank=True, null=True)),
                ('is_resolved', models.BooleanField(default=False)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('resolution_notes', models.TextField(blank=True)),
                ('alert', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='analytics.alert')),
                ('metric_value', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alert_events', to='analytics.metricvalue')),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': "Événement d'alerte",
                'verbose_name_plural': "Événements d'alerte",
                'ordering': ['-triggered_at'],
            },
        ),
        migrations.AddField(
            model_name='alert',
            name='metric',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alerts', to='analytics.metric'),
        ),
        migrations.AddIndex(
            model_name='metricvalue',
            index=models.Index(fields=['metric', 'timestamp'], name='analytics_m_metric__7d9082_idx'),
        ),
        migrations.AddIndex(
            model_name='metricvalue',
            index=models.Index(fields=['timestamp'], name='analytics_m_timesta_750b9f_idx'),
        ),
    ]
