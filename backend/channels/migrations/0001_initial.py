# Generated by Django 4.2.7 on 2025-09-05 13:21

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('tickets', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ChannelConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('type', models.CharField(choices=[('sms', 'SMS'), ('whatsapp', 'WhatsApp'), ('email', 'Email'), ('web', 'Web'), ('phone', 'Téléphone'), ('paper', 'Papier'), ('other', 'Autre')], max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('configuration', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Configuration de canal',
                'verbose_name_plural': 'Configurations de canaux',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='MessageTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('template_type', models.CharField(choices=[('welcome', 'Message de bienvenue'), ('confirmation', 'Confirmation de réception'), ('response', 'Réponse standard'), ('escalation', "Notification d'escalade"), ('closure', 'Notification de fermeture'), ('reminder', 'Rappel')], max_length=50)),
                ('subject', models.CharField(blank=True, max_length=200)),
                ('content', models.TextField()),
                ('language', models.CharField(default='fr', max_length=10)),
                ('variables', models.JSONField(default=list, help_text='Liste des variables disponibles')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='templates', to='channels.channelconfiguration')),
            ],
            options={
                'verbose_name': 'Modèle de message',
                'verbose_name_plural': 'Modèles de messages',
                'ordering': ['name'],
                'unique_together': {('name', 'channel', 'template_type', 'language')},
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('recipient', models.CharField(help_text='Numéro de téléphone, email, etc.', max_length=200)),
                ('subject', models.CharField(blank=True, max_length=200)),
                ('content', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'En attente'), ('sent', 'Envoyé'), ('delivered', 'Livré'), ('failed', 'Échec'), ('read', 'Lu')], default='pending', max_length=20)),
                ('external_id', models.CharField(blank=True, help_text='ID du message dans le système externe', max_length=100)),
                ('error_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='channels.channelconfiguration')),
                ('response', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='tickets.response')),
                ('template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='channels.messagetemplate')),
                ('ticket', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='tickets.ticket')),
            ],
            options={
                'verbose_name': 'Message',
                'verbose_name_plural': 'Messages',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ChannelStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('messages_sent', models.IntegerField(default=0)),
                ('messages_delivered', models.IntegerField(default=0)),
                ('messages_failed', models.IntegerField(default=0)),
                ('messages_read', models.IntegerField(default=0)),
                ('avg_delivery_time', models.FloatField(blank=True, help_text='Temps de livraison moyen en secondes', null=True)),
                ('success_rate', models.FloatField(blank=True, help_text='Taux de succès en pourcentage', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stats', to='channels.channelconfiguration')),
            ],
            options={
                'verbose_name': 'Statistique de canal',
                'verbose_name_plural': 'Statistiques de canaux',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='WebhookEvent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('event_type', models.CharField(choices=[('sms_received', 'SMS reçu'), ('whatsapp_received', 'WhatsApp reçu'), ('email_received', 'Email reçu'), ('delivery_status', 'Statut de livraison'), ('read_status', 'Statut de lecture')], max_length=50)),
                ('payload', models.JSONField()),
                ('headers', models.JSONField(default=dict)),
                ('processed', models.BooleanField(default=False)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('source_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='channels.channelconfiguration')),
                ('message', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='channels.message')),
                ('ticket', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='tickets.ticket')),
            ],
            options={
                'verbose_name': 'Événement webhook',
                'verbose_name_plural': 'Événements webhook',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['event_type', 'processed'], name='channels_we_event_t_4cb72b_idx'), models.Index(fields=['created_at'], name='channels_we_created_0a93ae_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['status', 'created_at'], name='channels_me_status_63f6f4_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['channel', 'recipient'], name='channels_me_channel_0ea026_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['ticket'], name='channels_me_ticket__6a3885_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='channelstats',
            unique_together={('channel', 'date')},
        ),
    ]
